title = "Ode à l'esperluette"
language = "fr"
publication_date = "2016-04-22T21:53:00+00:00"
---- sadraskol ----
Autrefois 27ème lettre de l'alphabet, aujourd'hui haï pour son nom et son utilisation trop commercial, la beauté de l'esperluette a peut-être trouvé refuge dans la chaleur de nos lignes de code. L'esperluette a toujours un rôle mystérieux qui convient à son apparence tourmentée, sa graphie sinueuse, emmêlée et convoluée.

En C++, l'esperluette a repris souffle. Reprenant les opérations qu'elle supportait déjà dans le simplissime C, la voilà en charge des références. Combien d'étudiants et de développeurs chevronnés auront pensé à ses belles courbes avant de déclarer un argument de fonction par référence ?

<figure><img src="https://s3.eu-central-1.amazonaws.com/sadraskol/200px-Ampersand_(italic%2C_Adobe_Jenson).svg.png" alt="Esperluette italique" width="200" height="167" /><figcaption> Esperluette italique</figcaption></figure>

On peut regretter que les polices de caractère monospace ne supportent pas l'italique, nous pourrions alors apprécier sa jolie ligature. Mais devant l'évidence que ce n'est qu'un « e » et un « t » assemblés timidement, nous aurions reconnu ses origines et peut être voulu lui réserver un rôle plus évident, la confiner dans les opérations binaires et booléenne.

Ses confrère le « + » et le « - », cantonnés à leur signification mathématique, n'ont pas eu le destin glorieux de l'esperluette. Qui peut encore imaginer l'image du Christ mourant, le destin d'un Saint Sébastien ou le simple carrefour routier dans la croix aseptisée qui pullule dans nos codes ?

Si la plupart des langages abandonne peu à peu l'utilisation de l'esperluette, nous aurons toujours le plaisir de penser à elle lorsque nous nous demandons en HTML si on doit l'accompagner avec sa contraction anglaise : `&amp;` ou si on peut garder ses élégantes arabesques intactes.